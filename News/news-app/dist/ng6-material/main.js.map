{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/news-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".example-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.example-card{\\n\\tmargin-top: 4px;\\n}\\n\\n.example-header-image { \\n  background-size: cover;\\n}\\n\\n.title{\\n    font-weight: bold;\\n}\\n\\n.img-article{\\n\\theight: 350px;\\n}\\n\\n.action-buttons{\\n\\ttext-align: center;\\n}\\n\\n.example-container {\\n    width: 100%;\\n    height: auto;\\n    border: 1px solid rgba(111, 111, 111, 0.50);\\n}\\n\\n.example-sidenav-content {\\n    display: flex;\\n    height: 75%;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.example-sidenav {\\n    padding: 20px;\\n}\\n\\n.source-name {\\n\\tmargin-left:5px; \\n}\\n\\n.list-item:hover{\\n\\tcursor: pointer;\\n\\tbackground-color: #3f51b5;\\n\\tcolor: white;\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  \\n  <button mat-button (click)=\\\"sidenav.open()\\\" ><mat-icon>menu</mat-icon></button>\\n  <span>News Headlines</span>  \\n  <span class=\\\"example-spacer\\\"></span>\\n  \\n  <button mat-button [matMenuTriggerFor]=\\\"appMenu\\\"><mat-icon>settings</mat-icon></button>\\n  \\n</mat-toolbar>\\n\\n\\n<mat-menu #appMenu=\\\"matMenu\\\">\\n  <button mat-menu-item> Settings </button>\\n  <button mat-menu-item> Help </button>\\n</mat-menu>\\n\\n\\n\\n<mat-sidenav-container class=\\\"example-container\\\">\\n  \\n  <mat-sidenav #sidenav class=\\\"example-sidenav\\\">\\n    <mat-list class=\\\"list-nav\\\">\\n        <mat-list-item class=\\\"list-item\\\" *ngFor=\\\"let source of mSources\\\" (click)=\\\"searchArticles(source.id);sidenav.close();\\\">\\n          \\n          <div mat-card-avatar [ngStyle]=\\\"{'background-image': 'url(../assets/images/'+ source.id +'.png)'}\\\" class=\\\"example-header-image\\\"></div>\\n          \\n          <span class=\\\"source-name\\\"> {{source.name}}</span>\\n        \\n        </mat-list-item>\\n    </mat-list>\\n  </mat-sidenav>\\n  \\n\\n  <mat-card class=\\\"example-card\\\"  *ngFor=\\\"let article of mArticles\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar [ngStyle]=\\\"{'background-image': 'url(../assets/images/'+ article.source.id +'.png)'}\\\" class=\\\"example-header-image\\\"></div>\\n      <mat-card-title class=\\\"title\\\">{{article.title}}</mat-card-title>\\n      <mat-card-subtitle>{{article.source.name}}</mat-card-subtitle>\\n    </mat-card-header>\\n    <img mat-card-image class=\\\"img-article\\\" src={{article.urlToImage}} alt=\\\"\\\">\\n    <mat-card-content>\\n      <p>\\n        {{article.description}}\\n      </p>\\n    </mat-card-content>\\n    <mat-card-actions class=\\\"action-buttons\\\">\\n      <button mat-button color=\\\"primary\\\"><mat-icon>thumb_up_alt</mat-icon> 12 Likes</button>\\n      <button mat-button color=\\\"primary\\\"><mat-icon>comment</mat-icon> Comments</button>\\n      <button mat-button color=\\\"primary\\\"><mat-icon>share</mat-icon> Share</button>\\n      <a mat-button color=\\\"primary\\\" href={{article.url}} target=\\\"_blank\\\" ><mat-icon>visibility</mat-icon> View</a>\\n    </mat-card-actions>\\n  </mat-card>\\n\\n</mat-sidenav-container>\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { NewsApiService } from './news-api.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\tmArticles:Array<any>;\n\tmSources:Array<any>;\n\t\n\tconstructor(private newsapi:NewsApiService){\n\t\tconsole.log('app component constructor called');         \n\t}\n\n\tngOnInit() {\n        //load articles\n\t    this.newsapi.initArticles().subscribe(data => this.mArticles = data['articles']);\n\t\t//load news sources\n\t\tthis.newsapi.initSources().subscribe(data=> this.mSources = data['sources']);\t\n    }\n\n\n\tsearchArticles(source){\n\t\tconsole.log(\"selected source is: \"+source);\n\t\tthis.newsapi.getArticlesByID(source).subscribe(data => this.mArticles = data['articles']);\n\t}\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NewsApiService } from './news-api.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCardModule, MatMenuModule, MatToolbarModule, MatIconModule, MatSidenavModule, MatListModule } from '@angular/material';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n  ],\n  providers: [NewsApiService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n//\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient  } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsApiService {\n\n  api_key = '9b7cf65a94624b69ad173bc8dfaa274a';\n\n  constructor(private http:HttpClient) { }\n  initSources(){\n     return this.http.get('https://newsapi.org/v2/sources?language=en&apiKey='+this.api_key);\n  }\n  initArticles(){\n   return this.http.get('https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey='+this.api_key);\n  }\n  getArticlesByID(source: String){\n   return this.http.get('https://newsapi.org/v2/top-headlines?sources='+source+'&apiKey='+this.api_key);\n  }\n} \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}